openapi: 3.0.3
info:
  title: Swagger Telegram Bot - Hunty
  description: |-
    Esta es la documentaci√≥n de las API's desarrolladas para Hunty
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8090
tags:
  - name: chats
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /:
    get:
      tags:
        - chats
      summary: get call chats
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chats'

  /message:
    get:
      tags:
        - chats
      summary: get all message
      parameters:
        - in: header
          name: ChatId
          required: true
          schema:
            type: string
            example: 1234
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messages'

    post:
      tags:
        - chats
      summary: send message
      parameters:
        - in: header
          name: ChatId
          required: true
          schema:
            type: string
            example: 1234
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: boolean
  /document:
    post:
      tags:
        - chats
      summary: send default document
      parameters:
        - in: header
          name: ChatId
          required: true
          schema:
            type: string
            example: 1234
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: boolean

components:
  schemas:
    chats:
      type: array
      items:
        type: string
        example: 1234
    MessageRequest:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    messages:
      type: array
      items:
        type: string
        example: Hola mundo a las 1686444240216
